# На сервере:
# 1. Под нужным пользователем ssh-keygen -t rsa
# 2. Копировать приватный ключ, положить в переменную PRODUCTION(DEVELOPMENT)_PRIVATE_KEY в gitlab
# 3. Копировать публичный ключ (~/.ssh/<KEY_NAME>.pub), добавить в ~/.ssh/authorized_keys на сервере
# 4. Добавить в переменную SSH_KNOWN_HOSTS в gitlab (ssh-keyscan -H <SERVER IP>)
# 5. Клонировать репозиторий проекта на удаленный сервер (этот путь будет $PROJECT_PATH)
# 6. Настроить права на сервере chown -R user:group

### PROD #### - Глобальные переменные
variables: &global_variables_prod
  ENV_PRIVATE_KEY: $PRODUCTION_PRIVATE_KEY
  PROJECT_HOST: $PRODUCTION_HOST
  SSH_PORT: 22
  BRANCH_NAME: master
  PROJECT_PATH: "/var/www/weather/data/www/altezza-weather.com/"
  PROJECT_NAME: Weather
  VITE_API_URL: "https://board-api.altezza.travel/api/weather/"


### Решаем вопросы с SSH в контейнере для деплоя фронта ###
.set_ssh_key: &set_ssh_key
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$ENV_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\tPubkeyAcceptedKeyTypes=+ssh-dss\n\n" > ~/.ssh/config

### PROD #### - Notification
.notification_team_prod: &notification_team_prod
    - apk add --no-cache curl
    - curl -s -d "chat_id=$TG_CHAT_KIRILL_ANTONOV&$TG_MESSAGE_SUCCESS" $TG_SEND_MESSAGE
    
### FAIL #### - Notification
.notification_team_fail: &notification_team_fail
    - apk add --no-cache curl
    - curl -s -d "chat_id=$TG_CHAT_KIRILL_ANTONOV&$TG_MESSAGE_FAIL" $TG_SEND_MESSAGE

stages:
  - Install frontend dependencies
  - Frontend build
  - Frontend deployment
  - Error notification

Frontend (Prod) Install dependencies:
  image: node:14
  stage: Install frontend dependencies
  variables:
            <<: *global_variables_prod
  only:
       changes:
           - .gitlab-ci.yml
           - package-lock.json
  script:
    - npm install --progress=false
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/

Frontend (Prod) build:
  image: node:14
  stage: Frontend build
  variables:
            <<: *global_variables_prod
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
        - node_modules/
  script:
    - npm run build
  artifacts:
    name: weather$CI_COMMIT_REF_NAME-$CI_COMMIT_TIMESTAMP
    expire_in: 2 week
    paths:
      - dist/*

Frontend (Prod) Deployment:
  image: alpine
  stage: Frontend deployment
  variables:
            <<: *global_variables_prod
  script:
    - *set_ssh_key
    - rsync -O -rav --delete-before dist/ $PROJECT_HOST:$PROJECT_PATH
    - *notification_team_prod

Deployment error notification:
  image: alpine
  stage: Error notification
  when: on_failure
  script:
    - *notification_team_fail